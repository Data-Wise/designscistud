set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,22,20)
t.test(A,B,var.equal = F)
set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,21,20)
t.test(A,B,var.equal = F)
set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,21,25)
t.test(A,B,var.equal = F)
set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,21,30)
t.test(A,B,var.equal = F)
set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,21,18)
t.test(A,B,var.equal = F)
choose(10000,2)
21.11-19.96
sales <- rbind(A,B)
page <- c(rep("A",500),rep("B",5000))
ABtest <- data.frame(page,sales)
set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,21,18)
sales <- rbind(A,B)
page <- c(rep("A",5000),rep("B",5000))
ABtest <- data.frame(page,sales)
length(sales)
length(page)
View(ABtest)
sales
A
help(rbind)
rbind(c(1,1),c(2,2))
colbind(c(1,1),c(2,2))
cbind(c(1,1),c(2,2))
set.seed(1001)
A <- rnorm(5000,20,5)
B <- rnorm(5000,21,18)
sales <- c(A,B)
sales
page <- c(rep("A",5000),rep("B",5000))
page
ABtest <- data.frame(page,sales)
View(ABtest)
sales[1:10]
set.seed(1001)
A <- round(rnorm(5000,20,5),2)
B <- round(rnorm(5000,21,18),2)
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
ABtest <- data.frame(page,sales)
View(ABtest)
hist(ABtest$sales[ABtest$page=="A"])
hist(ABtest$sales[ABtest$page=="B"])
set.seed(1001)
A <- abs(round(rnorm(5000,20,5),2))
B <- abs(round(rnorm(5000,21,18),2))
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
ABtest <- data.frame(page,sales)
hist(ABtest$sales[ABtest$page=="B"])
hist(ABtest$sales[ABtest$page=="A"])
t.test(A,B,var.equal = F)
set.seed(1001)
A <- abs(round(rnorm(5000,20,5),2))
B <- abs(round(rnorm(5000,20,18),2))
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
ABtest <- data.frame(page,sales)
t.test(A,B,var.equal = F)
hist(ABtest$sales[ABtest$page=="A"])
hist(ABtest$sales[ABtest$page=="B"])
hist(ABtest$sales[ABtest$page=="A"])
qqnorm(A);qqline(A)
qqnorm(B);qqline(B)
setwd("~/Dropbox/Docs/sta305/2017/assignments/hw1")
write.csv(x = ABtest,file = "ABtest.csv")
library("combinat", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
N <- choose(10000,2)
res <- numeric(N) # store the results
index <-combn(1:10000,5000) # Generate N treatment assignments
N
combn(1:15,8)
choose(15,8)
index <-combn(1:15,8)
index
index[1]
index[1,2]
index[1:10]
index[1:15]
index[,1]
index[,2]
combn(1:10000,5000)
?combn
?combn2
N <- 250000
res <- numeric(N) # store the results
for (i in 1:N)
{
index <- sample(length(sales),size=length(A),replace=F)
res[i] <- mean(sales[index])-mean(sales[-index]) }
hist(res)
observed <- mean(A)-mean(B)
observed
phatval <- (sum(res >= observed)+1)/(N+1)
phatval
phatval <- (sum(res <= observed)+1)/(N+1)
phatval
observed <- mean(A)-mean(B)
tbar <- mean(res)
pval <- sum(abs(res-tbar)>=abs(observed-tbar))/(N+1)
pval
t.test(A,B,var.equal = F)
hist(res,xlab="ybarA-ybarB", main="Randomization Distribution of difference in means")
observed
set.seed(1001)
A <- abs(round(rnorm(5000,20,5),2))
B <- abs(round(rnorm(5000,20,5),2))
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
ABtest <- data.frame(page,sales)
t.test(A,B,var.equal = F)
set.seed(1001)
A <- abs(round(rnorm(5000,20,5),2))
B <- abs(round(rnorm(5000,20,6),2))
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
ABtest <- data.frame(page,sales)
t.test(A,B,var.equal = F)
set.seed(1001)
A <- abs(round(rnorm(5000,20,5),2))
B <- abs(round(rnorm(5000,20.5,6),2))
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
t.test(A,B,var.equal = F)
set.seed(1001)
A <- abs(round(rnorm(5000,20,5),2))
B <- abs(round(rnorm(5000,20.2,6),2))
sales <- c(A,B)
page <- c(rep("A",5000),rep("B",5000))
t.test(A,B,var.equal = F)
N <- 250000
res <- numeric(N) # store the results
for (i in 1:N)
{
index <- sample(length(sales),size=length(A),replace=F)
res[i] <- mean(sales[index])-mean(sales[-index]) }
observed <- mean(A)-mean(B)
tbar <- mean(res)
pval <- sum(abs(res-tbar)>=abs(observed-tbar))/(N+1)
pval
observed <- median(A)-median(B)
obserced
obseved
observed
for (i in 1:N)
{
index <- sample(length(sales),size=length(A),replace=F)
res[i] <- median(sales[index])-median(sales[-index]) }
observed <- median(A)-median(B)
(sum(result <= observed)+1)/(N+1)
(sum(res <= observed)+1)/(N+1)
t.test(A,B,var.equal = F)
observed
median(A)
median(B)
20.25-19.89
View(ABtest)
choose(500,2)
choose(1000,500)
choose(10000,5000)
pre <- rbinom(500,20,.8)
pre
post <- rbinom(500,20,.81)
mean(post-pre)
set.seed(1017)
pre <- rbinom(500,20,.8)
post <- rbinom(500,20,.82)
mean(post-pre)
set.seed(1017)
pre <- rbinom(500,20,.8)
post <- rbinom(500,20,.85)
mean(post-pre)
set.seed(1017)
pre <- rbinom(500,20,.8)
post <- rbinom(500,20,.9)
mean(post-pre)
set.seed(1017)
pre <- rbinom(400,20,.8)
post <- rbinom(400,20,.9)
mean(post-pre)
student <- 1:400
langstudy <- data.frame(student,pre,post)
View(langstudy)
gender <- c(rep("M",200),rep("F",200))
langstudy <- data.frame(student,pre,post,gender)
View(langstudy)
write.csv(langstudy,file = "langstudy.csv")
round(rnorm(6,70,10))
round(rnorm(6,68,10))
F <- c(78, 82, 82, 65, 51, 75)
G <- c(72, 70, 55, 85, 59, 80)
t.test(F-G)
qnorm(F);qqline(F)
qnorm(F)
FertF <- c(78, 82, 82, 65, 51, 75)
FertG <- c(72, 70, 55, 85, 59, 80)
qnorm(FertF);qqline(FertF)
FertF <- c(78, 82, 82, 65, 51, 75)
FertG <- c(72, 70, 55, 85, 59, 80)
qqnorm(FertF);qqline(FertF)
qqnorm(FertG);qqline(FertG)
qqnorm(FertF-FertGG);qqline(FertF-FertGG)
qqnorm(FertF-FertG);qqline(FertF-FertG)
t.test(FertF-FertG)
FertF <- c(78, 82, 82, 65, 51, 75)
FertG <- c(72, 70, 55, 85, 59, 85)
qqnorm(FertF);qqline(FertF)
qqnorm(FertG);qqline(FertG)
qqnorm(FertF-FertG);qqline(FertF-FertG)
t.test(FertF-FertG)
diff <- FertF-FertG
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
meandiff <- mean(diff)
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
res
FertF <- c(78, 82, 82, 65, 90, 75)
FertF <- c(78, 82, 82, 65, 90, 75)
FertG <- c(72, 70, 55, 85, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
qqnorm(FertF);qqline(FertF)
qqnorm(FertG);qqline(FertG)
qqnorm(FertF-FertG);qqline(FertF-FertG)
t.test(FertF-FertG)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res<=meandiff)/N
sum(res>=meandiff)/N
FertF <- c(78, 82, 82, 65, 95, 75)
FertG <- c(72, 70, 55, 85, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
qqnorm(FertF);qqline(FertF)
qqnorm(FertG);qqline(FertG)
qqnorm(FertF-FertG);qqline(FertF-FertG)
t.test(FertF-FertG)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res>=meandiff)/N
FertF <- c(90, 82, 82, 65, 95, 75)
FertF <- c(90, 82, 82, 65, 95, 75)
FertG <- c(72, 70, 55, 85, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
t.test(FertF-FertG)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res>=meandiff)/N
FertF <- c(90, 82, 82, 65, 95, 75)
FertG <- c(60, 70, 55, 85, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res>=meandiff)/N
t.test(FertF-FertG)
FertF <- c(90, 82, 82, 65, 95, 75)
FertF <- c(90, 82, 82, 65, 95, 75)
FertG <- c(60, 66, 55, 85, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
t.test(FertF-FertG)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res>=meandiff)/N
FertF <- c(90, 82, 82, 65, 95, 75)
FertG <- c(60, 66, 55, 91, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
qqnorm(FertF);qqline(FertF)
qqnorm(FertG);qqline(FertG)
qqnorm(FertF-FertG);qqline(FertF-FertG)
t.test(FertF-FertG)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res>=meandiff)/N
FertF <- c(90, 82, 82, 55, 95, 75)
FertF <- c(90, 82, 82, 55, 95, 75)
FertG <- c(60, 66, 55, 91, 59, 85)
diff <- FertF-FertG
meandiff <- mean(diff)
qqnorm(FertF);qqline(FertF)
qqnorm(FertG);qqline(FertG)
qqnorm(FertF-FertG);qqline(FertF-FertG)
t.test(FertF-FertG)
N <- 2^(6) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 6)) # generate all possible treatment assign
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
hist(res, xlab="Mean Difference",main="Randomization Distribution Boys' Shoes")
abline(v = meandiff,col="blue")
sum(res>=meandiff)/N
1593/1611
1470/1611
nhefshwdat <- read.csv("~/Dropbox/Docs/sta305/2015/assignments/Assignment2/nhefshw2dat.csv")
baseline.char <- round(matrix(c(years1, years0, male1, male0, white1, white0,
university1, university0, kg1, kg0, cigs1, cigs0, smoke1, smoke0,
noexer1, noexer0, inactive1, inactive0),
ncol = 2, byrow=T), 1)
baseline.char <- round(matrix(c(years1, years0, male1, male0, white1, white0,
university1, university0, kg1, kg0, cigs1, cigs0, smoke1, smoke0,
noexer1, noexer0, inactive1, inactive0),
ncol = 2, byrow=T), 1)
years1 <-mean(nhefshwdat$age[nhefshwdat$qsmk == 1])
years0 <-mean(nhefshwdat$age[nhefshwdat$qsmk == 0])
male1 <-100*mean(nhefshwdat$sex[nhefshwdat$qsmk == 1]==0)
male0 <-100*mean(nhefshwdat$sex[nhefshwdat$qsmk == 0]==0)
white1 <-100*mean(nhefshwdat$race[nhefshwdat$qsmk == 1]==0)
white0 <-100*mean(nhefshwdat$race[nhefshwdat$qsmk == 0]==0)
university1 <-100*mean(nhefshwdat$education.code[nhefshwdat$qsmk == 1]==5)
university0 <-100*mean(nhefshwdat$education.code[nhefshwdat$qsmk == 0]==5)
kg1 <-mean(nhefshwdat$wt71[nhefshwdat$qsmk == 1])
kg0 <-mean(nhefshwdat$wt71[nhefshwdat$qsmk == 0])
cigs1 <-mean(nhefshwdat$smokeintensity[nhefshwdat$qsmk == 1])
cigs0 <-mean(nhefshwdat$smokeintensity[nhefshwdat$qsmk == 0])
smoke1 <-mean(nhefshwdat$smokeyrs[nhefshwdat$qsmk == 1])
smoke0 <-mean(nhefshwdat$smokeyrs[nhefshwdat$qsmk == 0])
noexer1 <-100*mean(nhefshwdat$exercise[nhefshwdat$qsmk == 1]==2)
noexer0 <-100*mean(nhefshwdat$exercise[nhefshwdat$qsmk == 0]==2)
inactive1 <-100*mean(nhefshwdat$active[nhefshwdat$qsmk == 1]==2)
inactive0 <-100*mean(nhefshwdat$active[nhefshwdat$qsmk == 0]==2)
baseline.char <- round(matrix(c(years1, years0, male1, male0, white1, white0,
university1, university0, kg1, kg0, cigs1, cigs0, smoke1, smoke0,
noexer1, noexer0, inactive1, inactive0),
ncol = 2, byrow=T), 1)
dimnames(baseline.char) <- list(c("age, years", "men, %", "white, %",
"university, %", "weight, kg",
"Cigarettes/day", "year smoking",
"little/no exercise, %",
"inactive daily life, %"),
c("Cessation (A=1)","No cessation (A=0)"))
prop.model <- glm(qsmk ~ as.factor(sex) + as.factor(race) +
age + as.factor(education.code) + smokeintensity +
smokeyrs  + as.factor(exercise) + as.factor(active) +
wt71, family = binomial(), data = nhefshwdat)
summary(prop.model)$coef
?predict.glm
p.qsmk.obs <- predict(prop.model, type = "response")
num <- 12
dat <- data.frame(1:num,nhefshwdat$qsmk[1:num], p.qsmk.obs[1:num])
colnames(dat) <- c("Subject","Quit Smoking", "Estimated Propensity Score")
knitr::kable(dat)
qsmk
dat$qsmk
nhefshwdat$qsmk
p.qsmk.obs <- predict(prop.model, type = "response")
p.qsmk.obs
num <- 12
dat <- data.frame(1:num,nhefshwdat$qsmk[1:num], p.qsmk.obs[1:num])
colnames(dat) <- c("Subject","Quit Smoking", "Estimated Propensity Score")
knitr::kable(dat)
?predict.glm
num <- 12
dat <- data.frame(1:num,nhefshwdat$qsmk[1:num], round(p.qsmk.obs[1:num],2))
colnames(dat) <- c("Subject","Quit Smoking", "Estimated Propensity Score")
knitr::kable(dat)
baseline.char[1,]
baseline.char[,1]
?fitted
fitted.values(prop.model)
fitted.values(prop.model)[1]
exp(0.1239035)/(1+exp(0.1239035))
exp(0.1239035)/(1+exp(0.1239035))
p.qsmk.obs[1]
coef(prop.model)
p.qsmk.obs[1]
coef(prop.model)
baseline.char[,1]
baseline.char[,1]*coef(prop.model)
baseline.char[,1]*coef(prop.model)[-1]
coef(prop.model)[-1]
nhefshwdat[1,]
nhefshwdat[1,-c(1,2)]
coef(prop.model)
coef(prop.model)[-1]
coef(prop.model)[-1]*nhefshwdat[1,-c(1,2)]
sum(coef(prop.model)[-1]*nhefshwdat[1,-c(1,2)])
sum(coef(prop.model)[-1]*nhefshwdat[1,-c(1,2)])-2.40
fitted.values(prop.model)[1]
log(-24)
exp(-24)
exp(-24)/(1+exp(-24))
exp(.1239)/(1+exp(.1239))
predict.glm(prop.model)[1]
predict.glm(prop.model)
predict.glm(prop.model)
predict.glm(prop.model)[1]
exp(-1.95)/(1+exp(-1.95))
predict.glm(prop.model,type = "response")[1]
predict.glm(prop.model)[1] # predicted value for the first subject
p1 <- predict.glm(prop.model)[1] # predicted value for the first subject
p1
exp(p1)/(1+exp(p1))
install.packages("rbounds")
tab0401 <- read.table("~/Dropbox/Docs/sta305/BHHData/BHH2-Data/tab0401.dat", header=TRUE, quote="\"")
library(BHH2)
tab0401 <- read.table("~/Dropbox/Docs/sta305/BHHData/BHH2-Data/tab0401.dat", header=TRUE, quote="\"")
library(BHH2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
plot(k,mcomp05(k),type="l")
mcomp05 <- function(k){1-.95^k}
k <- 1:10
plot(k,mcomp05(k),type="l",ylab = "Family-wise error rate",xlab = "Number of hypothesis tests")
mcomp05 <- function(k){1-.95^k}
k <- 1:10
plot(k,mcomp05(k),type="l",ylab = "Family-wise error rate",xlab = "Number of hypothesis tests",main = "Family-wise error rate at 0.05 level")
library(ggplot2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
qplot(k,mcomp05(k),type="l",ylab = "Family-wise error rate",xlab = "Number of hypothesis tests",main = "Family-wise error rate at 0.05 level")
qplot(k,mcomp05(k))
qplot(k,mcomp05(k),geom = "geom_path")
library(ggplot2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
qplot(k,mcomp05(k),geom = "geom_path")
qplot(k,mcomp05(k))
qplot(k,mcomp05(k))+geom_line()
qplot(k,mcomp05(k),xlab="Number of #hypothesis tests",ylab = "Family-wise error rate")+geom_line()+
qplot(k,mcomp05(k),xlab="Number of #hypothesis tests",ylab ="Family-wise error rate")+geom_line()+
qplot(k,mcomp05(k),xlab="Number of #hypothesis tests",ylab="Family-wise error rate")+geom_line()
qplot(k,mcomp05(k),xlab="Number of #hypothesis tests",ylab="Family-wise error rate")+geom_line()
qplot(k,mcomp05(k),xlab="Number of hypothesis tests",ylab="Family-wise error rate",main = "Family-wise error rate at 0.05 level")+geom_line()
library(ggplot2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
qplot(k,mcomp05(k),xlab="Number of hypothesis tests",ylab="Family-wise error rate",main = "Family-wise error rate expression(alpha)=0.05 level")+geom_line()
qplot(k,mcomp05(k),xlab="Number of hypothesis tests",ylab="Family-wise error rate",main = expression(paste("Family-wise error rate",alpha=0.05)))+geom_line()
library(ggplot2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
qplot(k,mcomp05(k),xlab="Number of hypothesis tests",ylab="Family-wise error rate",main = expression(paste("Family-wise error rate",alpha,"=0.05"")))+geom_line()
library(ggplot2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
qplot(k,mcomp05(k),xlab="Number of hypothesis tests",ylab="Family-wise error rate",main = expression(paste("Family-wise error rate",alpha,"=0.05")))+geom_line()
library(ggplot2)
mcomp05 <- function(k){1-.95^k}
k <- 1:10
qplot(k,mcomp05(k),xlab="Number of hypothesis tests",ylab="Family-wise error rate",main = expression(paste("Family-wise error rate ",alpha,"=0.05")))+geom_line()
setwd("~/Dropbox/Docs/sta305/2017/classslides/week8")
