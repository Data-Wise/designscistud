q9 <- ifelse(is.na(Quiz9)==T, 0, Quiz9)/100
q10 <- ifelse(is.na(Quiz10)==T, 0, Quiz10)/110
q11 <- ifelse(is.na(Quiz11)==T, 0, Quiz11)/100
q12 <- ifelse(is.na(Quiz12)==T, 0, Quiz12)/100
# convert each students quiz mark to a mark out of 14
L0401merge$qmark <- ((q1+q2+q3+q4+q5+q6+q7+q8+q9+q10+q11+q12)/12)*14
### Survey Credit
L0401merge$survcredit <- ifelse(is.na(RSurvPre)==F & is.na(RSurvPost)==F, 1, 0)
### Makeup Midterm
# Flag students that wrote makeup MT
L0401merge$MU1 <- ifelse(is.na(MT1MU)==F,1,0)
# Flag students with exam mark > test mark
L0401merge$rewtterm <- ifelse (L0401merge$MU1==0 & L0401merge$exam_score  > (L0401merge$MT1/69)*100
& is.na(L0401merge$MT1)==FALSE,1,0)
L0401merge$rewtterm <- ifelse (L0401merge$MU1==1,0,L0401merge$rewtterm)
# Midterm weighting
L0401merge$mtt1mark <- ifelse(L0401merge$rewtterm==1 & L0401merge$MU1==0, (L0401merge$MT1/69)*15,
ifelse(L0401merge$rewtterm==0 & L0401merge$MU1==0, (L0401merge$MT1/69)*35,(L0401merge$MT1MU/10)*5))
# If a student missed both the in-class test and makeup test
L0401merge$mtt1mark <- ifelse(is.na(L0401merge$MT1)==TRUE & L0401merge$MU1==0, 0, L0401merge$mtt1mark)
# Term mark is out of 30 and exam mark >= midterm mark if they wrote inlcass test and exam out of 70
m1 <- L0401merge$mtt1mark+L0401merge$qmark+L0401merge$survcredit+(L0401merge$exam_score/100)*70
# Term mark is out of 50 and exam mark < midterm mark if they wrote inlcass test and exam out of 50
m2 <- L0401merge$mtt1mark+L0401merge$qmark+L0401merge$survcredit+(L0401merge$exam_score/100)*50
# Term mark is out of 20 if they wrote makeup test and exam out of 80
m3 <- L0401merge$mtt1mark+L0401merge$qmark+L0401merge$survcredit+(L0401merge$exam_score/100)*80
L0401merge$coursemark <- ifelse(L0401merge$rewtterm==1 & L0401merge$MU1==0,m1,
ifelse(L0401merge$rewtterm==0 & L0401merge$MU1==0,m2 ,
ifelse(L0401merge$MU1==1,m3,NA)))
L0401merge$coursemark <- ifelse(is.na(L0401merge$coursemark),0,L0401merge$coursemark)
L0401gr <- select(L0401merge,Student.ID, Last.Name=Last.Name.x,First.Name=First.Name.x,
Username,exam_score,coursemark,section)
# L5101
gc_Fall.2016.STA220H1.L5101 <- read.csv("~/Dropbox/Docs/STA220/2016/misc/finalgrades/Fall2016STA220H1L5101.csv")
colnames(gc_Fall.2016.STA220H1.L5101)[7] <- "RSurvPre"
colnames(gc_Fall.2016.STA220H1.L5101)[5] <- "Quiz1"
colnames(gc_Fall.2016.STA220H1.L5101)[6] <- "Quiz2"
colnames(gc_Fall.2016.STA220H1.L5101)[8] <- "Quiz3"
colnames(gc_Fall.2016.STA220H1.L5101)[12] <- "MT1"
colnames(gc_Fall.2016.STA220H1.L5101)[9] <- "Quiz4"
colnames(gc_Fall.2016.STA220H1.L5101)[10] <- "Quiz5"
colnames(gc_Fall.2016.STA220H1.L5101)[11] <- "Quiz6"
colnames(gc_Fall.2016.STA220H1.L5101)[13] <- "Quiz7"
colnames(gc_Fall.2016.STA220H1.L5101)[15] <- "Quiz8"
colnames(gc_Fall.2016.STA220H1.L5101)[14] <- "MT1MU"
colnames(gc_Fall.2016.STA220H1.L5101)[16] <- "Quiz9"
colnames(gc_Fall.2016.STA220H1.L5101)[17] <- "Quiz10"
colnames(gc_Fall.2016.STA220H1.L5101)[18] <- "Quiz11"
colnames(gc_Fall.2016.STA220H1.L5101)[19] <- "Quiz12"
colnames(gc_Fall.2016.STA220H1.L5101)[20] <- "RSurvPost"
L5101merge <- merge(gc_Fall.2016.STA220H1.L5101,exammarks1,all.x=TRUE, by="Student.ID")
L5101merge$exam_score <- ifelse(is.na(L5101merge$exam_score),0,L5101merge$exam_score)
L5101merge$section <- rep("L5101",length(L5101merge$Student.ID))
attach(L5101merge)
### STA220 Marking Scheme
# quizzes 14%
# mt1 35% - MU MT 5%
# survey 1%
### Quizzes 14%
# Quiz 1 / 90
# Quiz 2 / 30
# Quiz 3 / 70
# quiz 4 / 110
# quiz 5 / 100
# quiz 6 / 90
# quiz 7 /100
# quiz 8 / 90
# quiz 9 / 100
# quiz 10 /110
# quiz 11 / 100
# quiz 12 /100
# if quiz mark is missing then students gets 0
q1 <- ifelse(is.na(Quiz1)==T, 0, Quiz1)/90
q2 <- ifelse(is.na(Quiz2)==T, 0, Quiz2)/30
q3 <- ifelse(is.na(Quiz3)==T, 0, Quiz3)/70
q4 <- ifelse(is.na(Quiz4)==T, 0, Quiz4)/110
q5 <- ifelse(is.na(Quiz5)==T, 0, Quiz5)/100
q6 <- ifelse(is.na(Quiz6)==T, 0, Quiz6)/90
q7 <- ifelse(is.na(Quiz7)==T, 0, Quiz7)/100
q8 <- ifelse(is.na(Quiz8)==T, 0, Quiz8)/90
q9 <- ifelse(is.na(Quiz9)==T, 0, Quiz9)/100
q10 <- ifelse(is.na(Quiz10)==T, 0, Quiz10)/110
q11 <- ifelse(is.na(Quiz11)==T, 0, Quiz11)/100
q12 <- ifelse(is.na(Quiz12)==T, 0, Quiz12)/100
# convert each students quiz mark to a mark out of 14
L5101merge$qmark <- ((q1+q2+q3+q4+q5+q6+q7+q8+q9+q10+q11+q12)/12)*14
### Survey Credit
L5101merge$survcredit <- ifelse(is.na(RSurvPre)==F & is.na(RSurvPost)==F, 1, 0)
### Makeup Midterm
# Flag students that wrote makeup MT
L5101merge$MU1 <- ifelse(is.na(MT1MU)==F,1,0)
# Flag students with exam mark > test mark
L5101merge$rewtterm <- ifelse (L5101merge$MU1==0 & L5101merge$exam_score > (L5101merge$MT1/69)*100
& is.na(L5101merge$MT1)==FALSE,1,0)
L5101merge$rewtterm <- ifelse (L5101merge$MU1==1,0,L5101merge$rewtterm)
# Midterm weighting
L5101merge$mtt1mark <- ifelse(L5101merge$rewtterm==1 & L5101merge$MU1==0, (L5101merge$MT1/69)*15,
ifelse(L5101merge$rewtterm==0 & L5101merge$MU1==0, (L5101merge$MT1/69)*35,(L5101merge$MT1MU/10)*5))
# If a student missed both the in-class test and makeup test
L5101merge$mtt1mark <- ifelse(is.na(L5101merge$MT1)==TRUE & L5101merge$MU1==0, 0, L5101merge$mtt1mark)
# Term mark is out of 30 and exam mark >= midterm mark if they wrote inlcass test and exam out of 70
m1 <- L5101merge$mtt1mark+L5101merge$qmark+L5101merge$survcredit+(L5101merge$exam_score/100)*70
# Term mark is out of 50 and exam mark < midterm mark if they wrote inlcass test and exam out of 50
m2 <- L5101merge$mtt1mark+L5101merge$qmark+L5101merge$survcredit+(L5101merge$exam_score/100)*50
# Term mark is out of 20 if they wrote makeup test and exam out of 80
m3 <- L5101merge$mtt1mark+L5101merge$qmark+L5101merge$survcredit+(L5101merge$exam_score/100)*80
L5101merge$coursemark <- ifelse(L5101merge$rewtterm==1 & L5101merge$MU1==0,m1,
ifelse(L5101merge$rewtterm==0 & L5101merge$MU1==0,m2 ,
ifelse(L5101merge$MU1==1,m3,NA)))
L5101merge$coursemark <- ifelse(is.na(L5101merge$coursemark),0,L5101merge$coursemark)
L5101gr <- select(L5101merge,Student.ID, Last.Name=Last.Name.x,First.Name=First.Name.x,
Username,exam_score,coursemark,section)
# L9902
Fall2016STA220H1L9902 <- read.csv("~/Dropbox/Docs/STA220/2016/misc/finalgrades/Fall2016STA220H1L9902.csv")
Online_Grades35 <- read.csv("~/Dropbox/Docs/STA220/2016/misc/finalgrades/STA220_Online_F2016_Grades35.csv")
L9902 <- merge(Fall2016STA220H1L9902,Online_Grades35,all.x = TRUE,by="Student.ID")
L9902gr <- merge(L9902,exammarks1,all.x=TRUE, by="Student.ID")[,c(1:18,22,25)]
L9902gr$exam_score <- ifelse(is.na(L9902gr$exam_score),0,L9902gr$exam_score)
L9902gr$section <- rep("L9902",length(L9902gr$Student.ID))
colnames(L9902gr)[7] <- "RSurvPre"
colnames(L9902gr)[5] <- "Quiz1"
colnames(L9902gr)[6] <- "Quiz2"
colnames(L9902gr)[8] <- "Quiz3"
colnames(L9902gr)[9] <- "Quiz4"
colnames(L9902gr)[10] <- "Quiz5"
colnames(L9902gr)[11] <- "Quiz6"
colnames(L9902gr)[12] <- "Quiz7"
colnames(L9902gr)[13] <- "Quiz8"
colnames(L9902gr)[14] <- "Quiz9"
colnames(L9902gr)[15] <- "Quiz10"
colnames(L9902gr)[16] <- "Quiz11"
colnames(L9902gr)[17] <- "Quiz12"
colnames(L9902gr)[18] <- "RSurvPost"
attach(L9902gr)
### Quizzes 14%
# Quiz 1 / 90
# Quiz 2 / 30
# Quiz 3 / 70
# quiz 4 / 110
# quiz 5 / 100
# quiz 6 / 90
# quiz 7 /100
# quiz 8 / 90
# quiz 9 / 100
# quiz 10 /110
# quiz 11 / 100
# quiz 12 /100
# if quiz mark is missing then students gets 0
q1 <- ifelse(is.na(Quiz1)==T, 0, Quiz1)/90
q2 <- ifelse(is.na(Quiz2)==T, 0, Quiz2)/30
q3 <- ifelse(is.na(Quiz3)==T, 0, Quiz3)/70
q4 <- ifelse(is.na(Quiz4)==T, 0, Quiz4)/110
q5 <- ifelse(is.na(Quiz5)==T, 0, Quiz5)/100
q6 <- ifelse(is.na(Quiz6)==T, 0, Quiz6)/90
q7 <- ifelse(is.na(Quiz7)==T, 0, Quiz7)/100
q8 <- ifelse(is.na(Quiz8)==T, 0, Quiz8)/90
q9 <- ifelse(is.na(Quiz9)==T, 0, Quiz9)/100
q10 <- ifelse(is.na(Quiz10)==T, 0, Quiz10)/110
q11 <- ifelse(is.na(Quiz11)==T, 0, Quiz11)/100
q12 <- ifelse(is.na(Quiz12)==T, 0, Quiz12)/100
# convert each students quiz mark to a mark out of 14
L9902gr$qmark <- ((q1+q2+q3+q4+q5+q6+q7+q8+q9+q10+q11+q12)/12)*14
# Survey Credit
L9902gr$survcredit <- ifelse(is.na(RSurvPre)==F & is.na(RSurvPost)==F, 1, 0)
# Final course grade
L9902gr$coursemark <- L9902gr$Grade_35+(L9902gr$exam_score/100)*50+L9902gr$qmark+L9902gr$survcredit
L9902gr1 <- select(L9902gr,Student.ID, Last.Name=Last.Name.x,First.Name=First.Name.x,
Username=Username.x,exam_score,coursemark,section)
# L9901
Fall2016STA220H1L9901 <- read.csv("~/Dropbox/Docs/STA220/2016/misc/finalgrades/Fall2016STA220H1L9901.csv")
Online_Grades35 <- read.csv("~/Dropbox/Docs/STA220/2016/misc/finalgrades/STA220_Online_F2016_Grades35.csv")
L9901 <- merge(Fall2016STA220H1L9901,Online_Grades35,all.x = TRUE,by="Student.ID")
L9901gr <- merge(L9901,exammarks1,all.x=TRUE, by="Student.ID")[,c(1:18,22,25)]
L9901gr$exam_score <- ifelse(is.na(L9901gr$exam_score),0,L9901gr$exam_score)
L9901gr$section <- rep("L9901",length(L9901gr$Student.ID))
colnames(L9901gr)[7] <- "RSurvPre"
colnames(L9901gr)[5] <- "Quiz1"
colnames(L9901gr)[6] <- "Quiz2"
colnames(L9901gr)[8] <- "Quiz3"
colnames(L9901gr)[9] <- "Quiz4"
colnames(L9901gr)[10] <- "Quiz5"
colnames(L9901gr)[11] <- "Quiz6"
colnames(L9901gr)[12] <- "Quiz7"
colnames(L9901gr)[13] <- "Quiz8"
colnames(L9901gr)[14] <- "Quiz9"
colnames(L9901gr)[15] <- "Quiz10"
colnames(L9901gr)[16] <- "Quiz11"
colnames(L9901gr)[17] <- "Quiz12"
colnames(L9901gr)[18] <- "RSurvPost"
attach(L9901gr)
### Quizzes 14%
# Quiz 1 / 90
# Quiz 2 / 30
# Quiz 3 / 70
# quiz 4 / 110
# quiz 5 / 100
# quiz 6 / 90
# quiz 7 /100
# quiz 8 / 90
# quiz 9 / 100
# quiz 10 /110
# quiz 11 / 100
# quiz 12 /100
# if quiz mark is missing then students gets 0
q1 <- ifelse(is.na(Quiz1)==T, 0, Quiz1)/90
q2 <- ifelse(is.na(Quiz2)==T, 0, Quiz2)/30
q3 <- ifelse(is.na(Quiz3)==T, 0, Quiz3)/70
q4 <- ifelse(is.na(Quiz4)==T, 0, Quiz4)/110
q5 <- ifelse(is.na(Quiz5)==T, 0, Quiz5)/100
q6 <- ifelse(is.na(Quiz6)==T, 0, Quiz6)/90
q7 <- ifelse(is.na(Quiz7)==T, 0, Quiz7)/100
q8 <- ifelse(is.na(Quiz8)==T, 0, Quiz8)/90
q9 <- ifelse(is.na(Quiz9)==T, 0, Quiz9)/100
q10 <- ifelse(is.na(Quiz10)==T, 0, Quiz10)/110
q11 <- ifelse(is.na(Quiz11)==T, 0, Quiz11)/100
q12 <- ifelse(is.na(Quiz12)==T, 0, Quiz12)/100
# convert each students quiz mark to a mark out of 14
L9901gr$qmark <- ((q1+q2+q3+q4+q5+q6+q7+q8+q9+q10+q11+q12)/12)*14
# Survey Credit
L9901gr$survcredit <- ifelse(is.na(RSurvPre)==F & is.na(RSurvPost)==F, 1, 0)
# Final course grade
L9901gr$coursemark <- L9901gr$Grade_35+(L9901gr$exam_score/100)*50+L9901gr$qmark+L9901gr$survcredit
L9901gr$coursemark <- ifelse(is.na(L9901gr$coursemark),0,L9901gr$coursemark)
L9901gr1 <- select(L9901gr,Student.ID, Last.Name=Last.Name.x,First.Name=First.Name.x,
Username=Username.x,exam_score,coursemark,section)
allsectionsic.grades <- rbind(L0101merge,L0201merge,L0301merge,L0401merge,L5101merge)
# Adjust borderline marks and define course failure for in-class sections
for (i in 1:length(allsectionsic.grades$Student.ID)){
if (round(allsectionsic.grades$coursemark[i])<50 & round(allsectionsic.grades$exam_score[i])>=50 ) {allsectionsic.grades$coursemark[i] <- 50}
if (round(allsectionsic.grades$coursemark[i])==89) {allsectionsic.grades$coursemark[i] <- 90}
if (round(allsectionsic.grades$coursemark[i])==84) {allsectionsic.grades$coursemark[i] <- 85}
if (round(allsectionsic.grades$coursemark[i])==79) {allsectionsic.grades$coursemark[i] <- 80}
if (round(allsectionsic.grades$coursemark[i])==76) {allsectionsic.grades$coursemark[i] <- 77}
if (round(allsectionsic.grades$coursemark[i])==72) {allsectionsic.grades$coursemark[i] <- 73}
if (round(allsectionsic.grades$coursemark[i])==69) {allsectionsic.grades$coursemark[i] <- 70}
if (round(allsectionsic.grades$coursemark[i])==66) {allsectionsic.grades$coursemark[i] <- 67}
if (round(allsectionsic.grades$coursemark[i])==62) {allsectionsic.grades$coursemark[i] <- 63}
if (round(allsectionsic.grades$coursemark[i])==59) {allsectionsic.grades$coursemark[i] <- 60}
if (round(allsectionsic.grades$coursemark[i])==56) {allsectionsic.grades$coursemark[i] <- 57}
if (round(allsectionsic.grades$coursemark[i])==52) {allsectionsic.grades$coursemark[i] <- 53}
if ((round(allsectionsic.grades$coursemark[i]) >= 47 & round(allsectionsic.grades$coursemark[i]) < 50
|allsectionsic.grades$exam_score[i]>=49 & round(allsectionsic.grades$coursemark[i]) < 50)) {allsectionsic.grades$coursemark[i] <- 50}
if (allsectionsic.grades$exam_score[i] ==0) {allsectionsic.grades$flag[i] <- "y"} else {allsectionsic.grades$flag[i] <- ""}
}
allsectionsic.grades$coursemark <- round(allsectionsic.grades$coursemark)
summary(filter(allsectionsic.grades,exam_score>0)$coursemark)
summary(filter(allsectionsic.grades,exam_score>0)$exam_score)
inclassgr <- select(allsectionsic.grades,Student.ID, Last.Name=Last.Name.x,First.Name=First.Name.x, Username,section, Quiz1,Quiz2,Quiz3,Quiz4, Quiz5, Quiz6, Quiz7, Quiz8, Quiz9, Quiz10, Quiz11, Quiz12, qmark,survcredit,rewtterm,MT1, mtt1mark,MU1,exam_score,coursemark,flag)
L0101exp <- filter(inclassgr,section=="L0101")
write.csv(L0101exp,"L0101grades.csv")
L0201exp <- filter(inclassgr,section=="L0201")
write.csv(L0201exp,"L0201grades.csv")
L0301exp <- filter(inclassgr,section=="L0301")
write.csv(L0301exp,"L0301grades.csv")
L0401exp <- filter(inclassgr,section=="L0401")
write.csv(L0401exp,"L0401grades.csv")
L5101exp <- filter(inclassgr,section=="L5101")
write.csv(L5101exp,"L5101grades.csv")
# Calc final mark for online sections
allsectionsol.grades <- rbind(L9901gr,L9902gr)
# Adjust borderline coursemarks and define course failure for online sections
for (i in 1:length(allsectionsol.grades$Student.ID)){
if (round(allsectionsol.grades$coursemark[i])<50 & round(allsectionsol.grades$exam_score[i])>=50 ) {allsectionsol.grades$coursemark[i] <- 50}
if (round(allsectionsol.grades$coursemark[i])==89) {allsectionsol.grades$coursemark[i] <- 90}
if (round(allsectionsol.grades$coursemark[i])==84) {allsectionsol.grades$coursemark[i] <- 85}
if (round(allsectionsol.grades$coursemark[i])==79) {allsectionsol.grades$coursemark[i] <- 80}
if (round(allsectionsol.grades$coursemark[i])==76) {allsectionsol.grades$coursemark[i] <- 77}
if (round(allsectionsol.grades$coursemark[i])==72) {allsectionsol.grades$coursemark[i] <- 73}
if (round(allsectionsol.grades$coursemark[i])==69) {allsectionsol.grades$coursemark[i] <- 70}
if (round(allsectionsol.grades$coursemark[i])==66) {allsectionsol.grades$coursemark[i] <- 67}
if (round(allsectionsol.grades$coursemark[i])==62) {allsectionsol.grades$coursemark[i] <- 63}
if (round(allsectionsol.grades$coursemark[i])==59) {allsectionsol.grades$coursemark[i] <- 60}
if (round(allsectionsol.grades$coursemark[i])==56) {allsectionsol.grades$coursemark[i] <- 57}
if (round(allsectionsol.grades$coursemark[i])==52) {allsectionsol.grades$coursemark[i] <- 53}
if (round(allsectionsol.grades$coursemark[i]) >= 47 & round(allsectionsol.grades$coursemark[i]) < 50
|allsectionsol.grades$exam_score[i]>=49 & round(allsectionsol.grades$coursemark[i]) < 50 ) {allsectionsol.grades$coursemark[i] <- 50}
if (allsectionsol.grades$exam_score[i] ==0) {allsectionsol.grades$flag[i] <- "y"} else {allsectionsol.grades$flag[i] <- ""}
}
allsectionsol.grades$coursemark <- round(allsectionsol.grades$coursemark)
summary(allsectionsol.grades$coursemark)
olclassgr <- select(allsectionsol.grades,Student.ID, Last.Name=Last.Name.x,First.Name=First.Name.x, Username=Username.x,section, Quiz1,Quiz2,Quiz3,Quiz4, Quiz5, Quiz6, Quiz7, Quiz8, Quiz9, Quiz10, Quiz11, Quiz12, qmark,Grade_35,survcredit, exam_score,coursemark,flag)
L9901exp <- filter(olclassgr,section=="L9901")
write.csv(L9901exp,"L9901grades.csv")
L9902exp <- filter(olclassgr,section=="L9902")
write.csv(L9902exp,"L9902grades.csv")
View(allsectionsic.grades)
dat.ic <- filter(allsectionsic.grades,Student.ID,Last.Name.x,Last.Name.y,exam_score,coursemark)
dat.ic <- filter(allsectionsic.grades,Student.ID,Last.Name.x,Last.Name.y,exam_score,coursemark)
dat.ic <- select(allsectionsic.grades,Student.ID,Last.Name.x,Last.Name.y,exam_score,coursemark)
dat.ic <- select(allsectionsic.grades,Student.ID,Last.Name.x,Last.Name.y,exam_score,coursemark)
dat.ol <- select(allsectionsol.grades,Student.ID,Last.Name.x,Last.Name.y,exam_score,coursemark)
View(allsectionsol.grades)
dat.ic <- select(allsectionsic.grades,Student.ID,Last.Name.x,Last.Name.x,exam_score,coursemark)
dat.ol <- select(allsectionsol.grades,Student.ID,Last.Name.x,Last.Name.x,exam_score,coursemark)
?rbind
dat.sta220 <- rbind(dat.ic,dat.ol)
dat.ic <- select(allsectionsic.grades,Student.ID,Last.Name.x,Last.Name.x,exam_score,section,coursemark)
dat.ol <- select(allsectionsol.grades,Student.ID,Last.Name.x,Last.Name.x,exam_score,section,coursemark)
dat.sta220 <- rbind(dat.ic,dat.ol)
View(dat.sta220)
pwd
wd
setwd("~/Dropbox/Docs/STA220/STA220-Research/data2016")
write.csv(dat.sta220,file ="sta220data-2016.csv")
write.csv(dat.sta220,file ="sta220data-2016.csv")
setwd("~/Dropbox/Docs/STA220/STA220-Research/data2016")
write.csv(dat.sta220,file ="sta220data-2016.csv")
6+3+4+2
15*5
sta2453names <- c("Arthur", "Fei", "Ken", "Kenny", "Jason", "Kishan","Jerry")
sample(sta2453names)
sample(sta2453names)
set.seed(130117)
sample(sta2453names)
knit_with_parameters('~/Dropbox/Docs/sta305/2017/classslides/week2/class3slides-jan16.Rmd')
setwd("~/Dropbox/Docs/sta305/2017/classslides/week2")
summarize(yA)
summarize(yA)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
summarize(yA)
summary(yA)
summary(yA)
summary(yA);sd(yA);quantile(yA,prob=c(0.25,0.75))
summary(yA);sd(yA);quantile(yA,prob=c(0.25,0.75))
summary(yB);sd(yA);quantile(yA,prob=c(0.25,0.75))
summary(yA)
sd(yA) # SD of fert A
quantile(yA,prob=c(0.25,0.75))
summary(yB);sd(yA);quantile(yA,prob=c(0.25,0.75))
yA <- c(11.4,25.3,28.5,14.2,21.1,24.3)
yB <- c(26.9,26.6,23.7,17.9,16.5,19.6)
mean(yA-yB)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
fert <- c(yA,yB) #pool data
N <- choose(12,6)
res <- numeric(N) # store the results
#Generate N treatment assignments
index <-combn(1:12,6)
for (i in 1:N)
{res[i] <- mean(fert[index[,i]])-mean(fert[-index[,i]])}
hist(res,xlab="ybarA-ybarB",
main="Randomization Distribution of difference in means")
observed <- mean(yA)-mean(yB) #store observed mean difference
abline(v=observed,col="blue") #add line at observed mean diff
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
mean(yA)-mean(yB)
mean(yA-yB)
Stirling<- function (n)((2*pi*n)^.5)*(n/exp(1))^n
Stirling(3)
Stirling(10000)
Stirling(1000)
Stirling(100)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
fert <- c(yA,yB) #pool data
N <- choose(12,6)
res <- numeric(N) # store the results
#Generate N treatment assignments
index <-combn(1:12,6)
for (i in 1:N)
{res[i] <- mean(fert[index[,i]])-mean(fert[-index[,i]])}
res[1:10]
res[1:20]
index[,1:20]
index[,1:2]
res[1:2]
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6);yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
fert <- c(yA,yB) #pool data
N <- choose(12,6)
res <- numeric(N) # store the results
index <-combn(1:12,6) #Generate N treatment assignments
for (i in 1:N)
{res[i] <- mean(fert[index[,i]])-mean(fert[-index[,i]])}
index[,1:2] #output randomizations
res[1:2] #output mean diffs
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6);yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
fert <- c(yA,yB) #pool data
N <- choose(12,6)
res <- numeric(N) # store the results
index <-combn(1:12,6) #Generate N treatment assignments
for (i in 1:N)
{res[i] <- mean(fert[index[,i]])-mean(fert[-index[,i]])}
index[,1:2] #output randomizations
res[1:2] #output mean diffs
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
fert <- c(yA,yB) #pool data
N <- choose(12,6)
res <- numeric(N) # store the results
#Generate N treatment assignments
index <-combn(1:12,6)
for (i in 1:N)
{res[i] <- mean(fert[index[,i]])-mean(fert[-index[,i]])}
hist(res,xlab="ybarA-ybarB",
main="Randomization Distribution of difference in means")
observed <- mean(yA)-mean(yB) #store observed mean difference
abline(v=observed,col="blue") #add line at observed mean diff
knit_with_parameters('~/Dropbox/Docs/sta305/2017/classslides/week2/class4slides-jan18.Rmd')
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T);abline(v=20,lty=2)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T)
legend("topleft", legend=c("Line 1", "Line 2"),
col=c("red", "blue"), pch=1:2, cex=0.8)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T)
legend("topleft", legend=c("Line 1", "Line 2"),
col=c("blue", "black"), pch=1:2, cex=0.8)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T)
legend("topleft", legend=c("Fertilizer A", "Fertilizer B"),
col=c("blue", "black"), pch=1:2, cex=0.8)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T)
legend("topleft", legend=c("Fertilizer A", "Fertilizer B"),
col=c("blue", "black"), pch=1:2, cex=0.8)
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T)
legend("left", legend=c("Fertilizer A", "Fertilizer B"),
col=c("blue", "black"), pch=1:2, cex=0.8)
?plot.ecdf
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),verticals = T
main="Empirical CDF Fertilizer")
yA <- c(11.4,23.7,17.9,16.5,21.1,19.6)
yB <- c(26.9,26.6,25.3,28.5,14.2,24.3)
plot.ecdf(yB,xlab="yield",xlim=c(11,29),verticals = T,
main="Empirical CDF Fertilizer")
plot.ecdf(yA,col="blue",pch=2,add=T,,verticals = T)
legend("left", legend=c("Fertilizer A", "Fertilizer B"),
col=c("blue", "black"), pch=1:2, cex=0.8)
?highlight
install.packages("highlight")
library("highlight", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?highlight
?pt
trtassign[,1]
trtassign[,1]
trtassign <- expand.grid(rep(LR, 10))
N <- 2^(10) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
# generate all possible treatment assign
trtassign <- expand.grid(rep(LR, 10))
trtassign[,1]
trtassign[1,]
trtassign[2,]
trtassign[1:2,]
res[1:2]
N <- 2^(10) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
# generate all possible treatment assign
trtassign <- expand.grid(rep(LR, 10))
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
diff <- shoes.data$matA-shoes.data$matB
library(BHH2)
data(shoes.data)
shoes.data
diff <- shoes.data$matA-shoes.data$matB
meandiff <- mean(diff); meandiff
shoe.dat2 <- data.frame(shoes.data,diff)
shoe.dat2
N <- 2^(10) # number of treatment assignments
res <- numeric(N) #vector to store results
LR <- list(c(-1,1)) # difference is multiplied by -1 or 1
trtassign <- expand.grid(rep(LR, 10))
for(i in 1:N){
res[i] <- mean(as.numeric(trtassign[i,])*diff)
}
res[1:2]
trtassign[1:2,]
5200/65
3600/65
65*1.5
55*65
5200/65
80*100
3600/65
150/40
650/65
800/40
rnorm(10)
